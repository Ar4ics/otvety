<HTML>
<HEAD>
<TITLE>Варианты тестовых заданий для будущих магистров потока МПО  </TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1251">
<SCRIPT language=JavaScript>
<!-- Original: Monichar -->

<!-- This script and many more are available free online at -->
<!-- The JavaScript Source!! http://javascript.internet.com -->

<!-- Begin
var ans = new Array;
var done = new Array;
var score = 0;
ans[1] = "d";
ans[2] = "a";
ans[3] = "d";
ans[4] = "b";
ans[5] = "c";
ans[6] = "b";
ans[7] = "d";
ans[8] = "b";
ans[9] = "c";
ans[10] = "e";
ans[11] = "c";
ans[12] = "c";
ans[13] = "b";
ans[14] = "a";
ans[15] = "b";
ans[16] = "d";
ans[17] = "c";
ans[18] = "a";
ans[19] = "d";
ans[20] = "c";
function Engine(question, answer) {
if (answer != ans[question]) {
if (!done[question]) {
done[question] = -1;
alert("Ошибка!\n\nВаш счет: " + score);
}
else {
alert("Вы уже отвечали на это!");
}
}
else {
if (!done[question]) {
done[question] = -1;
score++;
alert("Правильно!\n\nСейчас Ваш счет: " + score);
}
else { 
alert("Вы уже ответили на это!");
}
}
}
// End -->
</SCRIPT>
</HEAD>

<BODY text=black bgColor=white background="oboifon.jpg">


<H2>Вариант №81</H2>

<P><B>1. Чему равно значение переменной Y=2^3*4 </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(1, this.value)" type=radio value=a>
0 
<BR><INPUT onclick="Engine(1, this.value)" type=radio value=b>
1 
<BR><INPUT onclick="Engine(1, this.value)" type=radio value=c>
24 
<BR><INPUT onclick="Engine(1, this.value)" type=radio value=d>
32 
<BR><INPUT onclick="Engine(1, this.value)" type=radio value=e>
2048 
<BR><INPUT onclick="Engine(1, this.value)" type=radio value=f>
4096 
нет правильного ответа 


<P><B>2. Суть такого свойства алгоритма, как дискретность, заключается в том, что:  </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(2, this.value)" type=radio value=a>
алгоритм должен быть разбит на последовательность отдельных шагов 
<BR><INPUT onclick="Engine(2, this.value)" type=radio value=b>
при записи алгоритма должны использоваться только команды, входящие в систему команд исполнителя 
<BR><INPUT onclick="Engine(2, this.value)" type=radio value=c>
алгоритм должен обеспечивать решение не одной конкретной задачи, а некоторого класса задач данного типа 
<BR><INPUT onclick="Engine(2, this.value)" type=radio value=d>
при точном исполнении всех команд алгоритма процесс должен прекращаться за конечное число шагов, приводя к определенному результату
<BR><INPUT onclick="Engine(2, this.value)" type=radio value=e> 
исполнитель алгоритма не должен принимать решений, не предусмотренных составителем алгоритма 


<P><B>3.  Программа - это </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(3, this.value)" type=radio value=a>
протокол взаимодействия компонентов компьютерной сети 
<BR><INPUT onclick="Engine(3, this.value)" type=radio value=b>
понятное и точное предписание человеку совершить последовательность действий, 
направленных на достижение поставленных целей 
<BR><INPUT onclick="Engine(3, this.value)" type=radio value=c>
ориентированный граф, указывающий порядок исполнения команд компьютера 
<BR><INPUT onclick="Engine(3, this.value)" type=radio value=d>
алгоритм, записанный на языке программирования 
<BR><INPUT onclick="Engine(3, this.value)" type=radio value=e>
набор команд операционной системы компьютера 


<P><B>4.  Важнейший принцип структурного программирования базируется на утверждении: </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(4, this.value)" type=radio value=a>
любой алгоритм имеет дискретную структуру 
<BR><INPUT onclick="Engine(4, this.value)" type=radio value=b>
алгоритм любой сложности можно построить с помощью следующих базовых структур: линейной, ветвящейся, циклической 
<BR><INPUT onclick="Engine(4, this.value)" type=radio value=c>
современный компьютер - это единство аппаратных средств и программного обеспечения 
<BR><INPUT onclick="Engine(4, this.value)" type=radio value=d>
сущность формализации решаемой задачи заключается в составлении алгоритма 
<BR><INPUT onclick="Engine(4, this.value)" type=radio value=e>
в качестве обязательного этапа создания программы выступает ее тестирование и отладка 


<P><B>5. Тестирование программы - это  </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(5, this.value)" type=radio value=a>
фиксированная совокупность исходных данных и точное описание соответствующих этим данным результатов работы программы 
<BR><INPUT onclick="Engine(5, this.value)" type=radio value=b>
совокупность программ-отладчиков 
<BR><INPUT onclick="Engine(5, this.value)" type=radio value=c>
“ручная” имитация программистом процесса выполнения программы 
<BR><INPUT onclick="Engine(5, this.value)" type=radio value=d>
интерпретация результатов 
<BR><INPUT onclick="Engine(5, this.value)" type=radio value=e>
набор критериев оптимизации программ 


<P><B>6.  Предложение: “При точном исполнении всех команд алгоритма процесс должен прекратиться за конечное число шагов, приведя к определенному результату” фиксирует такое свойство алгоритма как: 
 </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(6, this.value)" type=radio value=a>
массовость 
<BR><INPUT onclick="Engine(6, this.value)" type=radio value=b>
результативность 
<BR><INPUT onclick="Engine(6, this.value)" type=radio value=c>
понятность 
<BR><INPUT onclick="Engine(6, this.value)" type=radio value=d>
дискретность 
<BR><INPUT onclick="Engine(6, this.value)" type=radio value=e>
детерминированность 


<P><B>7. Укажите последовательность команд, в результате выполнения которых значения переменных X и Y поменяются местами: </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(7, this.value)" type=radio value=a>
Y=X: B=X: X=Y 
<BR><INPUT onclick="Engine(7, this.value)" type=radio value=b>
B=X: X=Y: Y=X 
<BR><INPUT onclick="Engine(7, this.value)" type=radio value=c>
X=Y: Y=X 
<BR><INPUT onclick="Engine(7, this.value)" type=radio value=d>
C=X: X=Y: Y=C 
<BR><INPUT onclick="Engine(7, this.value)" type=radio value=e>
X=X+Y: Y=X–Y: X=X–Y 


<P><B>8.  Правила, согласно которым истолковываются (интерпретируются) предложения языка, называются 
</B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(8, this.value)" type=radio value=a>
письменностью 
<BR><INPUT onclick="Engine(8, this.value)" type=radio value=b>
синтаксисом 
<BR><INPUT onclick="Engine(8, this.value)" type=radio value=c>
грамматикой 
<BR><INPUT onclick="Engine(8, this.value)" type=radio value=d>
прагматикой 
<BR><INPUT onclick="Engine(8, this.value)" type=radio value=e>
семантикой 



<P><B>9.  Суть такого свойства алгоритма, как массовость, заключается в том, что </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(9, this.value)" type=radio value=a>
алгоритм должен иметь дискретную структуру (должен быть разбит на последовательность отдельных шагов) 
<BR><INPUT onclick="Engine(9, this.value)" type=radio value=b>
записывая алгоритм для конкретного исполнителя, можно использовать лишь те команды, что входят в систему его команд 
<BR><INPUT onclick="Engine(9, this.value)" type=radio value=c>
алгоритм должен обеспечивать решение не одной конкретной задачи, а некоторого класса задач данного типа 
<BR><INPUT onclick="Engine(9, this.value)" type=radio value=d>
при точном исполнении всех команд алгоритма процесс должен прекратиться за конечное число шагов, приведя к определенному результату 
<BR><INPUT onclick="Engine(9, this.value)" type=radio value=e>
исполнитель алгоритма не должен принимать решения, не предусмотренные составителем алгоритма 


<P><B>10.  Алгоритм называется циклическим: </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(10, this.value)" type=radio value=a>
если ход его выполнения зависит от истинности тех или иных условий 
<BR><INPUT onclick="Engine(10, this.value)" type=radio value=b>
если его команды выполняются в порядке их естественного следования друг за другом независимо от каких-либо условий 
<BR><INPUT onclick="Engine(10, this.value)" type=radio value=c>
если он представим в табличной форме 
<BR><INPUT onclick="Engine(10, this.value)" type=radio value=d>
если он включает в себя вспомогательный алгоритм 
<BR><INPUT onclick="Engine(10, this.value)" type=radio value=e>
если он составлен так, что его выполнение предполагает многократное повторение одних и тех же действий 



<P><B>11.  Алгоритм называется линейным, если </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(11, this.value)" type=radio value=a>
он составлен так, что его выполнение предполагает многократное повторение одних и тех же действий 
<BR><INPUT onclick="Engine(11, this.value)" type=radio value=b>
ход его выполнения зависит от истинности тех или иных условий 
<BR><INPUT onclick="Engine(11, this.value)" type=radio value=c>
его команды выполняются в порядке их естественного следования друг за другом независимо от каких-либо условий 
<BR><INPUT onclick="Engine(11, this.value)" type=radio value=d>
он представим в табличной форме 
<BR><INPUT onclick="Engine(11, this.value)" type=radio value=e>
он включает в себя вспомогательный алгоритм 


<P><B>12.  Отсутствие сообщений компьютера о синтаксических ошибках: </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(12, this.value)" type=radio value=a>
есть необходимое и достаточное условие правильности программы 
<BR><INPUT onclick="Engine(12, this.value)" type=radio value=b>
есть достаточное условие правильности программы 
<BR><INPUT onclick="Engine(12, this.value)" type=radio value=c>
есть необходимое, но не достаточное условие правильности программы 
<BR><INPUT onclick="Engine(12, this.value)" type=radio value=d>
не является необходимым условием правильности программы 
<BR><INPUT onclick="Engine(12, this.value)" type=radio value=e>
гарантирует правильность программы


<P><B>13.  Интерпретатор - это  </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(13, this.value)" type=radio value=a>
режим взаимодействия пользователя с ПК, при котором каждый запрос пользователя вызывает ответную реакцию 
<BR><INPUT onclick="Engine(13, this.value)" type=radio value=b>
транслятор с языка высокого уровня, обеспечивающий исполнение команды программы сразу после ее трансляции 
<BR><INPUT onclick="Engine(13, this.value)" type=radio value=c>
транслятор с языка высокого уровня, преобразующий в объектный код исходный текст программы 
<BR><INPUT onclick="Engine(13, this.value)" type=radio value=d>
устройство ПК, выполняющее арифметические и логические операции над входными данными 
<BR><INPUT onclick="Engine(13, this.value)" type=radio value=e>
законченное смысловое выражение на языке программирования 


<P><B>14.  Тестирование </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(14, this.value)" type=radio value=a>
может показать лишь наличие ошибок в программе, но не их отсутствие 
<BR><INPUT onclick="Engine(14, this.value)" type=radio value=b>
гарантирует безусловное выявление всех без исключения ошибок в программе 
<BR><INPUT onclick="Engine(14, this.value)" type=radio value=c>
выявляет все причины неправильной работы программы 
<BR><INPUT onclick="Engine(14, this.value)" type=radio value=d>
есть достаточное условие правильности программы 
<BR><INPUT onclick="Engine(14, this.value)" type=radio value=e>
совершенно бесполезная операция 


<P><B>15.  Суть такого свойства алгоритма, как понятность, заключается в том, что </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(15, this.value)" type=radio value=a>
алгоритм должен иметь дискретную структуру (должен быть разбит на последовательность отдельных шагов) 
<BR><INPUT onclick="Engine(15, this.value)" type=radio value=b>
записывая алгоритм для конкретного исполнителя, можно использовать лишь те команды, что входят в систему его команд 
<BR><INPUT onclick="Engine(15, this.value)" type=radio value=c>
алгоритм должен обеспечивать решение не одной конкретной задачи, а некоторого класса задач данного типа 
<BR><INPUT onclick="Engine(15, this.value)" type=radio value=d>
при точном исполнении всех команд алгоритма процесс должен прекратиться за конечное число шагов, приведя к определенному результату 
<BR><INPUT onclick="Engine(15, this.value)" type=radio value=e>
исполнитель алгоритма не должен принимать решения, не предусмотренные составителем алгоритма 

<P><B>16.  Суть такого свойства алгоритма, как результативность, заключается в том, что </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(16, this.value)" type=radio value=a>
алгоритм должен иметь дискретную структуру (должен быть разбит на последовательность отдельных шагов) 
<BR><INPUT onclick="Engine(16, this.value)" type=radio value=b>
записывая алгоритм для конкретного исполнителя, можно использовать лишь те команды, что входят в систему его команд 
<BR><INPUT onclick="Engine(16, this.value)" type=radio value=c>
алгоритм должен обеспечивать решение не одной конкретной задачи, а некоторого класса задач данного типа 
<BR><INPUT onclick="Engine(16, this.value)" type=radio value=d>
при точном исполнении всех команд алгоритма процесс должен прекратиться за конечное число шагов, приведя к определенному результату 
<BR><INPUT onclick="Engine(16, this.value)" type=radio value=e>
исполнитель алгоритма не должен принимать решения, не предусмотренные составителем алгоритма 


<P><B>17.  Что из перечисленного ниже не является языком программирования высокого уровня? </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(17, this.value)" type=radio value=a>
ALGOL 
<BR><INPUT onclick="Engine(17, this.value)" type=radio value=b>
BASIC 
<BR><INPUT onclick="Engine(17, this.value)" type=radio value=c>
Assembler 
<BR><INPUT onclick="Engine(17, this.value)" type=radio value=d>
PASCAL 
<BR><INPUT onclick="Engine(17, this.value)" type=radio value=e>
C 


<P><B>18.  Что не является основным понятием в алгоритмических языках высокого уровня? </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(18, this.value)" type=radio value=a>
Трансляторы 
<BR><INPUT onclick="Engine(18, this.value)" type=radio value=b>
Имена (идентификаторы) 
<BR><INPUT onclick="Engine(18, this.value)" type=radio value=c>
Операции (арифметические, логические и операции сцепки) 
<BR><INPUT onclick="Engine(18, this.value)" type=radio value=d>
Данные (константы, переменные и массивы) 
<BR><INPUT onclick="Engine(18, this.value)" type=radio value=e>
Выражения 
<BR><INPUT onclick="Engine(18, this.value)" type=radio value=f>
Операторы (команды


<P><B>19.   BASIC - это </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(19, this.value)" type=radio value=a>
машинно-зависимый логический язык программирования высокого уровня 
<BR><INPUT onclick="Engine(19, this.value)" type=radio value=b>
машинно-независимый логический язык программирования высокого уровня 
<BR><INPUT onclick="Engine(19, this.value)" type=radio value=c>
машинно-зависимый процедурный язык программирования низкого уровня 
<BR><INPUT onclick="Engine(19, this.value)" type=radio value=d>
машинно-независимый процедурный язык программирования высокого уровня 
<BR><INPUT onclick="Engine(19, this.value)" type=radio value=e>
объектно-ориентированный язык программирования высокого уровня 



<P><B>20.  Чему равно значение переменной Y=2 + 1/2*6 </B>
<p><I>Ответы</I>
<BR><INPUT onclick="Engine(20, this.value)" type=radio value=a>
0,25
<BR><INPUT onclick="Engine(20, this.value)" type=radio value=b>
1
<BR><INPUT onclick="Engine(20, this.value)" type=radio value=c>
5
<BR><INPUT onclick="Engine(20, this.value)" type=radio value=d>
9
<BR><INPUT onclick="Engine(20, this.value)" type=radio value=e>
нет верного ответа


<P><A HREF="../Критерии оценки.htm">Критерии оценки</A>

</td></tr></table>


</body>
</html>
